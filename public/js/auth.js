//import { auth, db } from "./firebase-conf";
import { createUserWithEmailAndPassword, updateProfile } from "https://www.gstatic.com/firebasejs/10.6.0/firebase-auth.js";
import { setDoc, doc } from "https://www.gstatic.com/firebasejs/10.6.0/firebase-firestore.js";
import { mostrarToast } from "./manageError.js";
import { supabase } from "./supabase-config.js";

//const supabase = createClient(supabaseUrl, supabaseAnonKey);


export function inicializarAutenticacion() {
    // document.getElementById("login-btn").addEventListener("click", mostrarLogin);
    document.getElementById("logout-btn")?.addEventListener("click", cerrarSesion);
}

// üîπ Mostrar el modal de login
function mostrarLogin() {
    document.getElementById("login-modal").style.display = "block";
}

// üîπ Cerrar sesi√≥n
export function cerrarSesion() {
    console.log("cerrar sesion")
    mostrarToast("Cerrando sesion...", "warning")
    localStorage.removeItem("user");  // Elimina los datos del usuario almacenados
    localStorage.removeItem("rol");
    localStorage.removeItem("nombre");
    
    // Redirigir al √≠ndice principal despu√©s de que el Toast termine
    setTimeout(() => {
        window.location.href = "index.html"; // Redirige a la p√°gina principal
    }, 3000); // Espera 3 segundos para mostrar el toast antes de redirigir
}
// üìå Funci√≥n para iniciar sesi√≥n y redirigir seg√∫n el rol
async function iniciarSesion(event) {
    event.preventDefault();

    // Obtener datos del formulario
    const email = document.getElementById("login-email").value.trim();
    const password = document.getElementById("login-password").value.trim();

    if (!email || !password) {
        alert("‚ö†Ô∏è Debes ingresar correo y contrase√±a.");
        return;
    }

    try {
        // üîπ Autenticar usuario en Supabase
        const { data, error } = await supabase.auth.signInWithPassword({
            email,
            password,
        });

        if (error) {
            mostrarToast("‚ùå Correo o contrase√±a incorrectos. Intenta nuevamente.", "error");
        }

        const user = data.user;
        if (!user) {
            throw new Error("No se pudo obtener la informaci√≥n del usuario.");
        }

        // üîπ Consultar los datos del usuario en la base de datos
        const { data: userData, error: userError } = await supabase
            .from("usuarios")
            .select("nombre, rol")
            .eq("id", user.id)
            .single();

        if (userError) throw new Error("No se encontr√≥ el usuario en la base de datos.");

        // Extraer datos del usuario
        const { nombre, rol } = userData;

        // Guardar los datos en localStorage
        localStorage.setItem("user", JSON.stringify(user));
        localStorage.setItem("rol", rol);
        localStorage.setItem("nombre", nombre);


        // üîπ Mensaje personalizado seg√∫n el rol
        let redirectUrl = "index.html"; // Default redirect URL
        switch (rol) {
            case "admin":
                mostrarToast(`‚úÖ Bienvenido, ${nombre}. Accediendo al panel de administraci√≥n.`, "success");
                redirectUrl = './html/admin.html';
                break;
            case "cajero":
                mostrarToast(`‚úÖ Bienvenido, ${nombre}. Accediendo a la p√°gina de cajero.`, "success");
                redirectUrl = './html/cajero.html';
                break;
            case "empacador":
                alert(`‚úÖ Bienvenido, ${nombre}. Accediendo a la p√°gina de empacadores.`, "success");
                redirectUrl = './html/empacadores.html';
                break;
            default:
                mostrarToast("‚úÖ Bienvenido, ${nombre}. Disfruta de tu experiencia en nuestra tienda.", "success");
        }
        window.location.href = redirectUrl;
    } catch (error) {
      //  mostrarToast("‚ùå Error en el inicio de sesi√≥n", "warning");
        console.error("‚ùå Error en el inicio de sesi√≥n:", error);
    }
}


// üìå Asociar la funci√≥n al formulario de inicio de sesi√≥n
document.getElementById("login-form").addEventListener("submit", iniciarSesion);


// üìå Funci√≥n para registrar un usuario nuevo en Supabase
async function registrarUsuario(event) {
    event.preventDefault(); // Evita recargar la p√°gina

    // üîπ Obtener datos del formulario
    const nombre = document.getElementById("signup-name").value.trim();
    const genero = document.getElementById("signup-gender").value;
    const email = document.getElementById("signup-email").value.trim();
    const password = document.getElementById("signup-password").value.trim();
    const confirmPassword = document.getElementById("signup-password-confirm").value.trim();
    const telefono = document.getElementById("signup-phone").value.trim();
    const direccion = document.getElementById("signup-address").value.trim();
    const fechaNacimiento = document.getElementById("signup-birthdate").value;
    const municipio = document.getElementById("signup-municipio").value.trim();
    const colonia = document.getElementById("signup-colonia").value.trim();
    const codigoPostal = document.getElementById("signup-codigo-postal").value.trim();

    // üî∏ Validar datos
    if (!nombre || !email || !password || !confirmPassword || !telefono || !direccion || !fechaNacimiento || !municipio || !colonia || !codigoPostal) {
        alert("‚ö†Ô∏è Todos los campos son obligatorios.");
        return;
    }
    if (password.length < 6) {
        alert("‚ö†Ô∏è La contrase√±a debe tener al menos 6 caracteres.");
        return;
    }
    if (password !== confirmPassword) {
        alert("‚ö†Ô∏è Las contrase√±as no coinciden.");
        return;
    }

    try {
        // üîπ Registrar usuario en Supabase Authentication
        const { data, error } = await supabase.auth.signUp({
            email,
            password
        });

        if (error) throw error;

        // üîπ Extraer el UID del usuario creado
        const user = data.user;
        if (!user) {
            alert("‚ùå Error al obtener el usuario despu√©s del registro.");
            return;
        }

        // üîπ Guardar datos adicionales en la tabla "usuarios"
        const { error: insertError } = await supabase.from("usuarios").insert([
            {
                id: user.id,  // UID generado por Supabase Auth
                nombre,
                genero,
                fechaNacimiento: fechaNacimiento,
                municipio,
                colonia,
                codigoPostal: codigoPostal,
                email,
                telefono,
                direccion,
                rol: "cliente",
                fechaRegistro: new Date().toISOString()
            }
        ]);

        if (insertError) throw insertError;

        // ‚úÖ Registro exitoso
        alert("‚úÖ ¬°Registro exitoso! Revisa tu correo para confirmar la cuenta.");
        document.getElementById("signupModal").style.display = "none"; // Cierra el modal

    } catch (error) {
        console.error("‚ùå Error en el registro:", error);
        alert(`Error: ${error.message}`);
    }
}

// üìå Asociar la funci√≥n al formulario
document.getElementById("signup-form").addEventListener("submit", registrarUsuario);

// üîπ Recuperar contrase√±a
document.getElementById("forgot-password-form")?.addEventListener("submit", function (e) {
    e.preventDefault();
    const emailInput = document.getElementById("recovery-email").value;
    const alertBox = document.getElementById("forgot-password-alert");

    if (emailInput === "") {
        alertBox.classList.remove("d-none", "alert-success");
        alertBox.classList.add("alert-danger");
        alertBox.textContent = "Por favor, ingresa un correo v√°lido.";
    } else {
        alertBox.classList.remove("d-none", "alert-danger");
        alertBox.classList.add("alert-success");
        alertBox.textContent = "Se ha enviado un enlace de recuperaci√≥n a tu correo.";
    }
});
