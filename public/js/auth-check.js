import { supabase } from "./supabase-config.js"; // üî• Importamos la configuraci√≥n
import { mostrarToast } from "./manageError.js";
// Verificar si el usuario tiene permisos de admin
export async function verificarAccesoAdmin() {
    try {
      //  console.log("üîç Verificando acceso del usuario...");

        // üîπ Obtener sesi√≥n activa y usuario autenticado
        const { data: sessionData, error: sessionError } = await supabase.auth.getSession();

        if (sessionError || !sessionData.session) throw new Error("No hay sesi√≥n activa.");

        const userId = sessionData.session.user.id;
       // console.log("üü¢ Usuario autenticado con ID:", userId);

        // üîπ Consultar el rol del usuario en la base de datos
        const { data: userData, error: userError } = await supabase
            .from("usuarios")
            .select("nombre, rol")
            .eq("id", userId)
            .single();

        if (userError || !userData) {
            throw new Error("Usuario no encontrado en la base de datos.");
        }

      //  console.log(`‚úÖ Usuario encontrado: ${userData.nombre} (${userData.rol})`);

        // üîπ Validar si es un administrador
        if (userData.rol !== "admin") {
            alert("üö´ No tienes permisos para acceder a esta p√°gina.");
            window.location.href = "../index.html";
        }

    } catch (error) {
        console.error("‚ùå Error en la verificaci√≥n de acceso:", error.message);
        alert("‚ö†Ô∏è Debes iniciar sesi√≥n como administrador.");
        window.location.href = "../index.html";
    }
}

// Verificar si hay un usuario autenticado al cargar la p√°gina
export async function verificarSesion() {
    try {
      //  console.log("üîç Verificando sesi√≥n activa...");

        // üîπ Obtener sesi√≥n activa
        const { data: sessionData, error: sessionError } = await supabase.auth.getSession();

        if (sessionError || !sessionData.session) {
            console.log("üü† No hay sesi√≥n activa.");
            return;
        }

        const userId = sessionData.session.user.id;
        console.log("üü¢ Usuario autenticado con ID:", userId);

        // üîπ Consultar el usuario en la base de datos
        const { data: userData, error: userError } = await supabase
            .from("usuarios")
            .select("nombre, rol")
            .eq("id", userId)
            .single();

        if (userError || !userData) {
            console.warn("‚ö†Ô∏è Usuario no encontrado en la base de datos.");
            return;
        }

        console.log(`‚úÖ Sesi√≥n activa: ${userData.nombre} (${userData.rol})`);

        // üîπ Si el usuario es admin y est√° en index.html, lo redirige al panel
        if (userData.rol === "admin" && window.location.pathname === "/index.html") {
            window.location.href = "./html/admin.html";
        }

    } catch (error) {
        console.error("‚ùå Error verificando la sesi√≥n:", error.message);
    }
}


// üîπ Cerrar sesi√≥n
export function cerrarSesion() {
    console.log("cerrar sesion")
    mostrarToast("Cerrando sesion...", "warning")
    localStorage.removeItem("user");  // Elimina los datos del usuario almacenados
    localStorage.removeItem("rol");
    localStorage.removeItem("nombre");
    
    // Redirigir al √≠ndice principal despu√©s de que el Toast termine
    setTimeout(() => {
        window.location.href = "../index.html"; // Redirige a la p√°gina principal
    }, 1000); // Espera 3 segundos para mostrar el toast antes de redirigir
}